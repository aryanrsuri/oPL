-- Test filter with direct boolean return
let is_even = fn x -> x % 2 == 0;
let even_numbers = filter(is_even, [1..10]);
println(even_numbers); -- Should output [2, 4, 6, 8, 10]

-- Test filter with explicit return
let is_odd = fn x -> return x % 2 == 1;
let odd_numbers = filter(is_odd, [1..10]);
println(odd_numbers); -- Should output [1, 3, 5, 7, 9]

-- Test filter with empty list
let empty_result = filter(is_even, []);
println(empty_result); -- Should output []

-- Test filter with all elements passing
let all_pass = filter(fn x -> true, [1..5]);
println(all_pass); -- Should output [1, 2, 3, 4, 5]

-- Test filter with no elements passing
let none_pass = filter(fn x -> false, [1..5]);
println(none_pass); -- Should output [] 